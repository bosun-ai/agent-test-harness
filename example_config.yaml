agents:
  # - name: cover-agent
  #   setup_script: |
  #     echo "Set up cover agent (LLM: $OPENAI_API_BASE, API_KEY: $OPENAI_API_KEY)" >> /tmp/setup.log;
  #     apt update;
  #     apt install -y python3-pip pipx && echo "Installed pip" >> /tmp/setup.log;
  #     pipx install git+https://github.com/Codium-ai/cover-agent.git && pipx ensurepath && echo "Installed cover agent" >> /tmp/setup.log;
  #   command: |
  #     echo "Running cover agent (LLM: $OPENAI_API_BASE, API_KEY: $OPENAI_API_KEY)" >> /tmp/setup.log;
  #     env >> /tmp/setup.log;
  #     cd /todolist && \
  #     /root/.local/bin/cover-agent \
  #       --source-file-path "$FILE_PATH" \
  #       --test-file-path "$TEST_FILE_PATH" \
  #       --project-root "$PROJECT_ROOT" \
  #       --code-coverage-report-path "$COVERAGE_REPORT_PATH" \
  #       --test-command "$TEST_COMMAND" \
  #       --test-command-dir "$PROJECT_ROOT" \
  #       --coverage-type "cobertura" \
  #       --desired-coverage 100 \
  #       --api-base "$OPENAI_API_BASE" \
  #       --max-iterations 10 2>&1 | tee /tmp/cover-agent.log
  - name: fluyt
    setup_script: |
      apt update;
      apt install -y curl gettext-base; # needed for envsubst
      curl -sL https://bosun-public.s3.eu-central-1.amazonaws.com/fluyt-cli -o /usr/local/bin/fluyt;
      chmod +x /usr/local/bin/fluyt;
      echo "Set up fluyt agent" >> /tmp/setup.log;
      cat <<- "MANIFEST_EOF" > /tmp/manifest.yaml.tmpl
      goal: "Write a unit test for $FILE_PATH"
      codebase:
        url: $REPOSITORY_URL
        lang: typescript
        commands:
          coverage: $TEST_COMMAND
          test: $TEST_COMMAND
      workspace:
        filesystem: LocalUnmanaged
      before: []
      agents:
        - name: "Unit Tester"
          type: WriteUnitTestAgent
          args:
            question: "$FILE_PATH"
      after: []

      MANIFEST_EOF
    command: |
      export QDRANT_URL=http://host.docker.internal:6333
      export REDIS_URL=redis://host.docker.internal:6379
      export OTEL_ENABLED=false
      export RUST_BACKTRACE=1
      export PORT=8000
      envsubst < /tmp/manifest.yaml.tmpl > /tmp/manifest.yaml
      echo "Running fluyt agent" >> /tmp/setup.log;
      fluyt run /tmp/manifest.yaml 2>&1 | tee /tmp/fluyt.log

repositories:
  - name: todolist
    url: https://github.com/bosun-ai/todolist.git
    setup_script: |
      echo "Set up todolist repository" >> /tmp/setup.log;
      apt update;
      apt install -y curl;
      curl -sL https://deb.nodesource.com/setup_20.x -o nodesource_setup.sh && bash nodesource_setup.sh \
        && apt install -y nodejs && echo "Installed nodejs" >> /tmp/setup.log;
      cd /todolist;
      npm install && echo "Installed npm packages" >> /tmp/setup.log;
    test_command: npm test -- --coverage --watchAll=false --bail=1 -u --coverageReporters=cobertura 2>/tmp/coverage_tool.log 1>/tmp/coverage_tool_output.log && cat coverage/cobertura-coverage.xml
    coverage_report_path: /todolist/coverage/cobertura-coverage.xml
    files:
      - [src/AddItem.tsx, src/AddItem.test.tsx]
  # - name: derrick
  #   url: https://github.com/bosun-ai/derrick.git
  #   setup_script: |
  #     apt-get install -y build-essential lld curl;
  #     curl https://sh.rustup.rs -sSf | bash -s -- -y;
  #     echo 'source $HOME/.cargo/env' >> $HOME/.bashrc
  #   coverage_tool_command: cargo tarpaulin
